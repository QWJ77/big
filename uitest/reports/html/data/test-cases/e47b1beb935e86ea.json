{
  "uid" : "e47b1beb935e86ea",
  "name" : "TestOptometre.test_draw_a_bill",
  "fullName" : "testcase.optometry.sale_management.test_optometre_sales.TestOptometre.test_draw_a_bill",
  "historyId" : "73d37fc3ff1ca49cc60722b61cdfd448",
  "time" : {
    "start" : 1573637836544,
    "stop" : 1573637864047,
    "duration" : 27503
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "Exception: 点击元素('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')失败",
  "statusTrace" : "self = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n>               ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n\ncommon\\basePage.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6bf5f077377777957c82a21ab53b4e85\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000018307EE55F8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\86177\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n>           ele = self.findElement(locator)\n\ncommon\\basePage.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n                ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n                self.logger.info(\"正在定位元素信息：定位方式结束->%s, value值->%s\" % (locator[0], locator[1]))\n                return ele\n            except Exception as e:\n>               self.logger.info(\"正在定位元素信息：定位方式结束 \"+e)\nE               TypeError: can only concatenate str (not \"TimeoutException\") to str\n\ncommon\\basePage.py:71: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.optometry.sale_management.test_optometre_sales.TestOptometre object at 0x0000018307EE5D30>\n\n    @helper.testcase(\"进行销售开单\")\n    def test_draw_a_bill(self):\n        with helper.step(\"进入视光销售--查询用户\"):\n            self.op.query_users()\n        with helper.step(\"销售开单\"):\n>           self.op.draw_a_bill()\n\ntestcase\\optometry\\sale_management\\test_optometre_sales.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\optometry\\sale_management\\optometre_sales_page.py:83: in draw_a_bill\n    self.click(self.print_sure)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n            ele = self.findElement(locator)\n            ele.click()\n            self.logger.info(\"点击元素:\"+str(locator))\n        except Exception:\n            self.get_screen()\n            self.logger.error(\"点击元素{}失败\".format(locator))\n>           raise Exception(\"点击元素{}失败\".format(locator))\nE           Exception: 点击元素('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')失败\n\ncommon\\basePage.py:110: Exception",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Exception: 点击元素('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')失败",
    "statusTrace" : "self = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n>               ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n\ncommon\\basePage.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6bf5f077377777957c82a21ab53b4e85\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000018307EE55F8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\86177\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n>           ele = self.findElement(locator)\n\ncommon\\basePage.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n                ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n                self.logger.info(\"正在定位元素信息：定位方式结束->%s, value值->%s\" % (locator[0], locator[1]))\n                return ele\n            except Exception as e:\n>               self.logger.info(\"正在定位元素信息：定位方式结束 \"+e)\nE               TypeError: can only concatenate str (not \"TimeoutException\") to str\n\ncommon\\basePage.py:71: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.optometry.sale_management.test_optometre_sales.TestOptometre object at 0x0000018307EE5D30>\n\n    @helper.testcase(\"进行销售开单\")\n    def test_draw_a_bill(self):\n        with helper.step(\"进入视光销售--查询用户\"):\n            self.op.query_users()\n        with helper.step(\"销售开单\"):\n>           self.op.draw_a_bill()\n\ntestcase\\optometry\\sale_management\\test_optometre_sales.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\optometry\\sale_management\\optometre_sales_page.py:83: in draw_a_bill\n    self.click(self.print_sure)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n            ele = self.findElement(locator)\n            ele.click()\n            self.logger.info(\"点击元素:\"+str(locator))\n        except Exception:\n            self.get_screen()\n            self.logger.error(\"点击元素{}失败\".format(locator))\n>           raise Exception(\"点击元素{}失败\".format(locator))\nE           Exception: 点击元素('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')失败\n\ncommon\\basePage.py:110: Exception",
    "steps" : [ {
      "name" : "进入视光销售--查询用户",
      "time" : {
        "start" : 1573637836545,
        "stop" : 1573637842729,
        "duration" : 6184
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "销售开单",
      "time" : {
        "start" : 1573637842729,
        "stop" : 1573637863990,
        "duration" : 21261
      },
      "status" : "failed",
      "statusMessage" : "self = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n>               ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n\ncommon\\basePage.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6bf5f077377777957c82a21ab53b4e85\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000018307EE55F8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\86177\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n>           ele = self.findElement(locator)\n\ncommon\\basePage.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def findElement(self, locator):\n        '''定位到元素，返回元素对象，没定位到，Timeout异常'''\n        if not isinstance(locator, tuple):\n            print('locator参数类型错误，必须传元祖类型：loc = (\"id\", \"value1\")')\n        else:\n            try:\n                '''判断某个元素是否被加到了dom树里，并不代表该元素一定可见，如果定位到就返回元素'''\n                self.logger.info(\"正在定位元素信息：定位方式开始->%s, value值->%s\" % (locator[0], locator[1]))\n                ele = WebDriverWait(self.driver, self.timeout, self.t).until(EC.presence_of_element_located(locator))\n                self.logger.info(\"正在定位元素信息：定位方式结束->%s, value值->%s\" % (locator[0], locator[1]))\n                return ele\n            except Exception as e:\n>               self.logger.info(\"正在定位元素信息：定位方式结束 \"+e)\nE               TypeError: can only concatenate str (not \"TimeoutException\") to str\n\ncommon\\basePage.py:71: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.optometry.sale_management.test_optometre_sales.TestOptometre object at 0x0000018307EE5D30>\n\n    @helper.testcase(\"进行销售开单\")\n    def test_draw_a_bill(self):\n        with helper.step(\"进入视光销售--查询用户\"):\n            self.op.query_users()\n        with helper.step(\"销售开单\"):\n>           self.op.draw_a_bill()\n\ntestcase\\optometry\\sale_management\\test_optometre_sales.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\optometry\\sale_management\\optometre_sales_page.py:83: in draw_a_bill\n    self.click(self.print_sure)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.optometry.sale_management.optometre_sales_page.OptometreSalesPage object at 0x0000018307E83748>\nlocator = ('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')\n\n    def click(self, locator):\n        try:\n            # self.js_focus_element(locator)\n            ele = self.findElement(locator)\n            ele.click()\n            self.logger.info(\"点击元素:\"+str(locator))\n        except Exception:\n            self.get_screen()\n            self.logger.error(\"点击元素{}失败\".format(locator))\n>           raise Exception(\"点击元素{}失败\".format(locator))\nE           Exception: 点击元素('xpath', '/html/body/div[4]/div/div[2]/div/div[1]/div/div/div[2]/button')失败\n\ncommon\\basePage.py:110: Exception",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9d9a736f5852617d",
        "name" : "截图",
        "source" : "9d9a736f5852617d.png",
        "type" : "image/png",
        "size" : 115816
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "关闭浏览器",
      "time" : {
        "start" : 1573637864047,
        "stop" : 1573637866204,
        "duration" : 2157
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "视光运营"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "QWJ77"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "视光销售"
  }, {
    "name" : "testId",
    "value" : "进行销售开单"
  }, {
    "name" : "thread",
    "value" : "163524-MainThread"
  }, {
    "name" : "suite",
    "value" : "testcase.optometry.sale_management.test_optometre_sales"
  }, {
    "name" : "testClass",
    "value" : "testcase.optometry.sale_management.test_optometre_sales"
  }, {
    "name" : "testMethod",
    "value" : "TestOptometre.test_draw_a_bill"
  }, {
    "name" : "package",
    "value" : "testcase.optometry.sale_management.test_optometre_sales"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "进行销售开单",
    "url" : "进行销售开单",
    "type" : "tms"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e47b1beb935e86ea.json",
  "parameterValues" : [ ]
}